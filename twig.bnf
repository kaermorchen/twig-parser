{
  lex: {
    macros: {
      id: `[a-zA-Z0-9_]`,
    },
    rules: [
      ['\\s+', `/* skip whitespace */`],
      ['\\d+', `return 'NUMBER'`],
      [`{id}+`, `return 'IDENTIFIER'`],
      [`"[^"]*"`, `yytext = yytext.slice(1, -1); return 'STRING';`],
      [`'[^']*'`, `yytext = yytext.slice(1, -1); return 'STRING';`],
    ],
  },

  moduleInclude: `
    function node(props) {
      return Object.assign({}, props);
    }
  `,

  bnf: {
    "Block": [
      ["'{{' Statement '}}'", "$$ = node({type: 'Block', body: [$2]})"],
    ],
     "Statement": [
      ["EmptyStatement"],
      ["Identifier"],
      ["Literal"],
    ],
    "EmptyStatement": [
      ["EmptyStatement", "$$ = node({type: 'EmptyStatement'})"],
    ],
    "Literal": [
      ["NumericLiteral"],
      ["StringLiteral"],
    ],
    "NumericLiteral": [
      ["NUMBER", "$$ = node({type: 'NumericLiteral', value: Number($1)})"],
    ],
    "StringLiteral": [
      ["STRING", "$$ = node({type: 'StringLiteral', value: $1})"],
    ],
    "Identifier": [
      ["IDENTIFIER", "$$ = node({type: 'Identifier', value: $1})"],
    ],
  }
}
